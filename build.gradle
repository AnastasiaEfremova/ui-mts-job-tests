plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

group = 'org.examle'
version = '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.19.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.19.0")
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:6.19.1",
            "org.junit.jupiter:junit-jupiter:5.10.1",
            'org.slf4j:slf4j-simple:2.0.7',
            'net.datafaker:datafaker:1.9.0',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.9',
            'com.fasterxml.jackson.core:jackson-core:2.13.1',
            'com.fasterxml.jackson.core:jackson-databind:2.13.1',
            'com.fasterxml.jackson.core:jackson-annotations:2.13.1',
            'io.qameta.allure:allure-selenide:2.20.1',
            'io.qameta.allure:allure-junit5:2.20.1',
            'org.aeonbits.owner:owner:1.0.4',
            'net.datafaker:datafaker:1.9.0'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "console.encoding", "UTF-8"
    systemProperties(System.getProperties())

    testLogging {
        events "started", "skipped", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
        showStandardStreams = true
    }
}

task regress_tests(type: Test) {
    useJUnitPlatform {
        includeTags("regress")
    }
}

task cookies_tests(type: Test) {
    useJUnitPlatform {
        includeTags("cookie")
    }
}

task city_tests(type: Test) {
    useJUnitPlatform {
        includeTags("city")
    }
}

task search_tests(type: Test) {
    useJUnitPlatform {
        includeTags("search")
    }
}

task integration_tests(type: Test) {
    useJUnitPlatform {
        includeTags("integration")
    }
}